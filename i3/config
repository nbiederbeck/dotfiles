# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8
font pango:System San Francisco Display 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal
# bindsym $mod+Return exec rxvt-unicode
bindsym $mod+Return exec alacritty
bindsym $mod+Shift+Return exec firefox

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# start rofi
bindsym $mod+space exec rofi -show run

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+odiaeresis focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
# bindsym $mod+Shift+j move left
# bindsym $mod+Shift+k move down
# bindsym $mod+Shift+l move up
# bindsym $mod+Shift+odiaeresis move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
# bindsym $mod+space focus mode_toggle

# focus the parent container
# bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

set $workspace1 "1: "
set $workspace2 "2: "
set $workspace3 "3: "
set $workspace4 "4: "
set $workspace5 "5: "
set $workspace6 "6: "
set $workspace7 "7: "
set $workspace8 "8: "
set $workspace9 "9: "
set $workspace10 "10: "

# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace10


# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym odiaeresis resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"



#  -- made by Noah --  #
exec ~/Telegram/Telegram
bindsym $mod+shift+t exec ~/Telegram/Telegram
# hide borders when fullscreen
hide_edge_borders smart # none, vertical, horizontal, both, smart
# lock shortcut
bindsym $mod+shift+l exec ~/.config/i3/lock.sh
# # run terminal on startup
# exec alacritty
# set background
exec ~/.fehbg
exec always ~/.fehbg

bindsym $mod+Tab focus right
bindsym $mod+Shift+Tab focus left

mode "border" {
    # use window title, but no border
    bindsym t border normal 0
    # use window title with 1 pixel border
    bindsym a border normal 1
    # use only border
    bindsym b border pixel 1
    # use neither window title nor border
    bindsym n border none
    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+b mode "border"

#  -- colorscheme --  #
set $almost_black    #2E3440ff
set $dark_gray       #3B4252ff
set $lighter_gray    #434C5Eff
set $dark_gray_blue  #4C566Aff
set $darkest_white   #D8DEE9ff
set $dark_white      #E5E9F0ff
set $light_white     #ECEFF4ff
set $turquoise       #8FBCBBff
set $cyan            #88C0D0ff
set $light_gray_blue #81A1C1ff
set $dark_blue       #5E81ACff
set $red             #BF616Aff
set $orange          #D08770ff
set $yellow          #EBCB8Bff
set $green           #A3BE8Cff
set $lila            #B48EADff
set $black           #000000ff

#  -- color windows --  #
#                       #border       #background   #text          #indicator
client.focused          $green        $green        $almost_black  $cyan
client.unfocused        $almost_black $almost_black $darkest_white $cyan
client.focused_inactive $almost_black $almost_black $darkest_white $cyan
client.urgent           $red          $red          $almost_black  $cyan

#  -- i3status --  #
bar                     {
    status_command      i3status  # -c ~/.config/i3status/config
    font                pango:OfficeCodeProD 8
    colors              {
        background      $black
        separator       $lighter_gray
        #                  #border #background #text
        focused_workspace  $green  $black      $light_white
        inactive_workspace $black  $black      $light_white
        urgent_workspace   $red    $black      $light_white
    }
    mode dock  # dock, hide, invisible
    hidden_state hide  # hide, show
    modifier $mod
    strip_workspace_numbers no  # yes, no
    separator_symbol "-->|<--"
    position bottom  # top, bottom
}

# default borders and stuff
for_window [class=".*"] border pixel 1
for_window [class="mupdf"] border normal 1
assign [class='MuPDF'] $workspace4
# urxvt floating
# for_window [class="URxvt"] floating toggle
assign [class="URxvt"] $workspace3

# # display workspace 10 through hdmi or whatever
# workspace $workspace10 output HDMI1

# bind programs to workspaces
# run `xprop`, click on program and find `WM_CLASS(STRING)`, second value
assign [class="Alacritty"] $workspace1
assign [class="Firefox-esr"] $workspace2
assign [class="Telegram"] $workspace7

# gaps global
gaps inner 13
smart_gaps on
# gaps outer 13
# set gaps commands with following command
# gaps inner|outer current|all set|plus|minus <px>
# set workspaces accordingly
# workspace <ws> gaps inner|outer <px>
