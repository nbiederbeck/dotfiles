#!/bin/bash

(( exit_code = 0 ))

find_cmd=$(command -v fd || command -v find)
find_cmd=$(echo "${find_cmd}" | rev | cut -d/ -f1 | rev)

if [[ ${find_cmd} == "find" ]]; then
    dirs=$( \
        find ~ \
            -maxdepth 5 \
            -name '.git' \
            -not -path '*/.cache/*' \
            -not -path '*/.cargo/*' \
            -not -path '*/.fzf/*' \
            -not -path '*/.tmux/*' \
            -not -path '*/anaconda3/*' \
            -not -path '*/texlive/*' \
            -not -path '*/.texmf/*' \
            -not -path '*/.bash-it/*' \
            -not -path '*/.zplug/*' \
            -not -path '*/vollmond/*' \
            -not -path '*/.go/*' \
    )
elif [[ ${find_cmd} == "fd" ]]; then
    dirs=$( \
        fd '\.git$' \
            --maxdepth 5 \
            --type d \
            --hidden \
            --exclude .cache \
            --exclude .cargo \
            --exclude .fzf \
            --exclude anaconda3 \
            --exclude texlive \
            --exclude .zplug \
            --exclude vollmond \
            --exclude .go \
            ~ \
    )
fi

for gr in ${dirs}; do
    wd=$(dirname "${gr}")
    pushd "${wd}" &> /dev/null || exit 1
    status=$(git status)
    if [[ ${status} =~ "git" ]]; then
        notify-send -u critical "${wd}" "\n$(git status --short)"
        (( exit_code = 1 ))
    fi
    popd &> /dev/null || exit 1
done

msg="everything is fine :)"
if [[ "${exit_code}" == 0 ]]; then
    notify-send -u low "Check Git" "${msg}"
fi

exit "${exit_code}"
