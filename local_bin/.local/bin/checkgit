#!/bin/bash

let exit_code=0

find_cmd=$(command -v fd || command -v find)
find_cmd=$(echo ${find_cmd} | rev | cut -d/ -f1 | rev)

echo "${find_cmd}ing ..."

if [[ ${find_cmd} == "find" ]]; then
    dirs=$( \
        find ~ \
            -maxdepth 5 \
            -name '.git' \
            -not -path '*/.cache/*' \
            -not -path '*/.vim/*' \
            -not -path '*/.cargo/*' \
            -not -path '*/.fzf/*' \
            -not -path '*/.tmux/*' \
            -not -path '*/anaconda3/*' \
            -not -path '*/texlive/*' \
            -not -path '*/.texmf/*' \
            -not -path '*/.bash-it/*' \
    )
elif [[ ${find_cmd} == "fd" ]]; then
    dirs=$( \
        fd '.git$' \
            --maxdepth 5 \
            --type d \
            --hidden \
            --exclude .vim \
            --exclude .cache \
            --exclude .cargo \
            --exclude .fzf \
            --exclude anaconda3 \
            --exclude texlive \
            ~ \
    )
fi

for gr in ${dirs}; do
    wd=$(dirname $gr)
    pushd $wd &> /dev/null
    status=$(git status)
    if [[ $status =~ "ntracked files" ]]; then
        if [[ -t 1 ]]; then
            echo "$wd   has untracked files"
        else
            notify-send -u critical "$wd   has untracked files"
        fi
        let exit_code=1
    elif [[ $status =~ "branch is ahead" ]]; then
        if [[ -t 1 ]]; then
            echo "$wd   has current branch not pushed"
        else
            notify-send -u critical "$wd   has current branch not pushed"
        fi
        let exit_code=1
    elif [[ $status =~ "nothing to commit" ]]; then
        true
    else
        if [[ -t 1 ]]; then
            echo "$wd   needs attention"
        else
            notify-send -u critical "$wd   needs attention"
        fi
        let exit_code=1
    fi
    popd &> /dev/null
done

if [[ $exit_code == 0 ]]; then
    echo " everything is fine :)"
fi

exit $exit_code
