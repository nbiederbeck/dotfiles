#!/bin/bash
. ~/.bash_colors

parse_git_branch() {
    git branch 2> /dev/null
}

parse_git_repo() {
    git remote -v 2> /dev/null | grep 'origin.*fetch' | \
    sed -E 's#^origin.*(git@|https?://)##;s/(.git)? .*$//;s/gitlab.com/lab/;s/github.com/hub/'
}

parse_git_status() {
    git status --short 2> /dev/null |\
        rg '^( M| A|\?\?|MM)' --count
}

parse_git_away() {
    git status --short --branch 2> /dev/null | head -1 | grep '\[.*\]' -o
}

print_git() {
    gb=$(parse_git_branch)
    gs=$(parse_git_status)
    ga=$(parse_git_away)
    if [[ "${gb}" ]]; then  # is a git repository
        if [[ "${gs}" || "${ga}" ]]; then
            printf "%s " "$(clr_brown clr_bold "${gb} ${gs} ${ga}")"
        else
            printf "%s " "$(clr_green "${gb}")"
        fi
    else  # is NOT a git repo
        echo ""
    fi
}

print_conda() {
    if [[ ${CONDA_DEFAULT_ENV} ]]; then
        printf "(%s) " ${CONDA_DEFAULT_ENV}
    fi
}

reset_prompt() {
    PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    prompt="$(print_conda)$(print_git)"
    if [[ ${prompt} ]]; then
        PS1="${prompt}\n${PS1}"
    fi
}

PROMPT_DIRTRIM=0
PROMPT_COMMAND=reset_prompt
